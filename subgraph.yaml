specVersion: 0.0.2
description: Fee data across a collection of web3 protocols.
repository: https://github.com/web3index/subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: livepeer
    network: mainnet
    source:
      startBlock: 9274420
      address: 5b1ce829384eebfa30286f12d1e7a695ca45f5d2
      abi: TicketBroker
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/mappings/livepeer.ts
      abis:
        - name: TicketBroker
          file: ./abis/TicketBroker.json
        - name: UniswapV1Exchange
          file: ./abis/UniswapV1Exchange.json
        - name: UniswapV2Pair
          file: ./abis/UniswapV2Pair.json
      entities:
        - Day
        - Protocol
      eventHandlers:
        - event: WinningTicketRedeemed(indexed address,indexed address,uint256,uint256,uint256,uint256,bytes)
          handler: winningTicketRedeemed
  - kind: ethereum/contract
    name: thegraph
    network: mainnet
    source:
      address: F55041E37E12cD407ad00CE2910B8269B01263b9
      abi: Staking
      startBlock: 11440000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/mappings/thegraph.ts
      entities:
        - Day
        - Protocol
      abis:
        - name: Staking
          file: ./abis/Staking.json
        - name: UniswapV2Pair
          file: ./abis/UniswapV2Pair.json
      eventHandlers:
        - event: AllocationCollected(indexed address,indexed bytes32,uint256,uint256,indexed address,address,uint256,uint256)
          handler: handleAllocationCollected
  - kind: ethereum/contract
    name: ens
    network: mainnet
    source:
      address: '0x283Af0B28c62C092C9727F1Ee09c02CA627EB7F5'
      abi: EthRegistrarController
      startBlock: 9350000
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/mappings/ens.ts
      entities:
        - Registration
      abis:
        - name: EthRegistrarController
          file: ./abis/EthRegistrarController.json
        - name: UniswapV2Pair
          file: ./abis/UniswapV2Pair.json
        - name: UniswapV1Exchange
          file: ./abis/UniswapV1Exchange.json
      eventHandlers:
        - event: >-
            NameRegistered(string,indexed bytes32,indexed
            address,uint256,uint256)
          handler: handleNameRegisteredByController
        - event: 'NameRenewed(string,indexed bytes32,uint256,uint256)'
          handler: handleNameRenewedByController
  # need to track Ocean datatoken factory contract and create datatoken entity
  # need to track Ocean pool factory contract and update datatoken storage when a pool is created for it

 
templates:
  # For OCEAN datatokens so we can track events on each independent token contract
  - kind: ethereum/contract
    name: ocean 
    network: mainnet
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/mappings/ocean.ts
      entities:
        - ERC20Template
      abis:
        - name: UniswapV2Pair
          file: ./abis/UniswapV2Pair.json
        - name: OceanDataToken
          file: ./node_modules/@oceanprotocol/contracts/artifacts/contracts/templates/ERC20Template.sol/ERC20Template.json
      eventHandlers:
        - event:    OrderStarted(indexed address,address,uint256,uint256,uint256,indexed address,uint256)
          handler:  handleOrderStarted
        - event:    OrderFinished(bytes32,indexed address,uint256,uint256,indexed address,uint256);
          handler:  handleOrderFinished
